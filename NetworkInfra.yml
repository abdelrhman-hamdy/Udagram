Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VpcCIDR:
    Description:  The IP CIDR range of the VPC 
    Type: String 
    Default: 10.0.0.0/16

  PubCIDR1:
    Description:  The IP  range of the PublicSubnet1 
    Type: String 
    Default: 10.0.1.0/24
  
  PubCIDR2:
    Description:  The IP  range of the PublicSubnet1 
    Type: String 
    Default: 10.0.2.0/24
  
  PrivCIDR1:
    Description:  The IP range of the PrivateSubnet1 
    Type: String 
    Default: 10.0.3.0/24

  PrivCIDR2:
    Description:  The IP range of the PrivateSubnet2
    Type: String 
    Default: 10.0.4.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true 
      Tags: 
        - Key : Name  
          Value : !Ref EnvironmentName
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1a
      CidrBlock: !Ref PubCIDR1
      MapPublicIpOnLaunch: true
      Tags: 
        - Key : Name
          Value : !Sub ${EnvironmentName} Public Subnet 1
      VpcId: !Ref VPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1b
      CidrBlock: !Ref PubCIDR2                                  
      MapPublicIpOnLaunch: true
      Tags: 
        - Key : Name
          Value : !Sub ${EnvironmentName} Public Subnet 2
      VpcId: !Ref VPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1a
      CidrBlock: !Ref PrivCIDR1                                  
      MapPublicIpOnLaunch: false
      Tags: 
        - Key : Name
          Value : !Sub ${EnvironmentName} Private Subnet 1
      VpcId: !Ref VPC

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1b
      CidrBlock: !Ref PrivCIDR2                                  
      MapPublicIpOnLaunch: false
      Tags: 
        - Key : Name
          Value : !Sub ${EnvironmentName} Private Subnet 2
      VpcId: !Ref VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName
  InternetGatewayAttachement :
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  
  EIP1:
   DependsOn: InternetGatewayAttachement
   Type: AWS::EC2::EIP
   Properties:
      Domain: vpc

  EIP2:
   DependsOn: InternetGatewayAttachement
   Type: AWS::EC2::EIP
   Properties:
      Domain: vpc

  NAT1 : 
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EIP1.AllocationId
      SubnetId: !Ref  PublicSubnet1


  NAT2 : 
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt EIP2.AllocationId
      SubnetId: !Ref  PublicSubnet2


  PublicRouteTable  :
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Sub ${EnvironmentName} Public Route Table
  
  PublicDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachement
    Properties:
       RouteTableId: !Ref PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: InternetGateway

  publicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  publicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Sub ${EnvironmentName} Private Route Table1
  
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  !Sub ${EnvironmentName} Private Route Table2

  PrivateDefaultRoute1:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref PrivateRouteTable1
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId:
         Ref: NAT1

  PrivateDefaultRoute2:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref PrivateRouteTable2
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId:
         Ref: NAT2

  privateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  privateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
      


Outputs: 

  VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
          Name: !Sub ${EnvironmentName}-VPCID

  PublicSubnet1: 
        Description: A reference to the created PublicSubnet1
        Value: !Ref "PublicSubnet1"
        Export:
          Name: !Sub "${EnvironmentName}-PublicSubnet1"

  PublicSubnet2: 
        Description: A reference to the created PublicSubnet2
        Value: !Ref PublicSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PublicSubnet2
  
  PrivateSubnet1: 
        Description: A reference to the created PrivateSubnet1
        Value: !Ref PrivateSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PrivateSubnet1

  PrivateSubnet2: 
        Description: A reference to the created PrivateSubnet2
        Value: !Ref PrivateSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PrivateSubnet2

  PrivateSubnets : 
      Value : !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
      Export:
          Name: !Sub ${EnvironmentName}-PrivateSubnets